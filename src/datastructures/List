
#include <stdio.h>
#include <stdlib.h>


_list_t *create_list();
      _list_t*list;

      if (0 > (list = (_list_t *) malloc(sizeof(_list_t)))) {
        perror("malloc() failed. Cannot acquire memory for the list");
        return NULL;
    }

void destroy_list(_list_t *list) {
    if (list == NULL) {
        return;
    }

    free(list);
}

typdef struct node {
   void *data;
   struct node *next;
} node_t;

typdef struct list {
   node_t *head;
   node_t *last;
}

void printList() {

   struct node *ptr = head;

   printf("\n[head] =>");
   
   while(ptr != NULL) {        
      printf(" %d =>",ptr->data);
      ptr = ptr->next;
   }

   printf(" [null]\n");
}

void insert(int data) {
   
   struct node *link = (struct node*) malloc(sizeof(struct node));

   //link->key = key;
   link->data = data;

   link->next = head;

   head = link;
}

int main() {
   insert(1);
   insert(2);
   insert(3); 

   printList();
   return 0;
}